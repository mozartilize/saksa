name: Docker Image CI

on:
  push:
    branches:
      - 'master'
    tags:
      - \d+.\d+.*

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get package version
        id: get_package_version
        run: |
          echo ::set-output name=version::$(grep ^version pyproject.toml | cut -c 11- | sed 's/"//g')

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          build-args: |
            VERSION=${{ steps.get_package_version.outputs.version }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_package_version.outputs.version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  upload-artifacts:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    permissions:
      actions: write
    container: ghcr.io/mozartilize/saksa:latest

    steps:
      - name: Get package version
        id: get_package_version
        run: |
          echo ::set-output name=version::$(python -c 'from importlib.metadata import version; print(version("saksa"))')

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: saksa-${{ steps.get_package_version.outputs.version }}-py3-none-any.zip
          path: /saksa-${{ steps.get_package_version.outputs.version }}-py3-none-any.whl
